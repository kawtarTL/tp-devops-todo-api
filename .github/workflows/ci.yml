name: CI Pipeline

on:
  push:
    branches:
      - main  # Le pipeline se déclenche lors d'un push sur la branche principale

jobs:
  build:
    runs-on: ubuntu-latest  # Utilisation d'une machine Ubuntu

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Récupère le code source de ton repository

      # Étape de construction
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'  # Spécifie la version de Node.js

      - name: Install dependencies
        run: npm install  # Installe les dépendances du projet Node.js

      # Étape de tests unitaires (si applicable)
      - name: Run tests
        run: npm test  # Lance les tests unitaires (assurez-vous que vous avez des tests définis)

      # Étape de linting (optionnel)
      - name: Run linting
        run: npm run lint  # Lancer ESLint ou un autre linter pour vérifier la qualité du code

  deploy:
    runs-on: ubuntu-latest  # Utilisation d'une machine Ubuntu pour le déploiement

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Récupère le code source de ton repository

      - name: Deploy
        run: |
          # Exemple d'une commande de déploiement (personnalise selon ton besoin)
          docker build -t mon-app .
          docker run -d -p 8080:8080 mon-app  # Déploie ton application avec Docker
          
      # Étape de création de tag (optionnel mais recommandé)
      - name: Create tag
        if: success()  # Ne crée un tag que si le pipeline a réussi
        run: |
          TAG="v1.0.0"  # Remplace par le tag de ta version
          git tag $TAG
          git push origin $TAG  # Pousse le tag sur le repository GitHub

